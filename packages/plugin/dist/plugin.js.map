{"version":3,"file":"plugin.js","sources":["../src/index.ts"],"sourcesContent":["export interface PluginConfig {\n  target?: string;\n  userName?: string;\n  mode?: 'web' | 'mobile';\n  libPath?: string;\n}\n\nexport {};\n\ndeclare global {\n  interface Window {\n    TestPlugin: {\n      init: (config?: PluginConfig) => Promise<void>;\n      version: string;\n    };\n  }\n}\n\nasync function loadScript(src: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = src;\n    script.type = 'module';\n    script.onload = () => resolve();\n    script.onerror = () => reject(new Error(`Failed to load ${src}`));\n    document.head.appendChild(script);\n  });\n}\n\n// @ts-ignore\nconsole.log('[PLUGIN] Initializing...');\n\nwindow.TestPlugin = {\n  version: '1.0.0',\n  \n  async init(config = {}) {\n    console.log('[PLUGIN] Init called with:', config);\n    \n    const { userName = 'Test User', mode = 'web' } = config;\n\n    try {\n      if (mode === 'web') {\n        console.log('[PLUGIN] Loading web-loader...');\n        const { mount } = await import('/packages/web-loader/dist/web-loader.js');\n        mount('app', userName);\n      } else if (mode === 'mobile') {\n        console.log('[PLUGIN] Loading react-native...');\n        const { initMobileBridge } = await import('/packages/react-native/dist/react-native.js');\n        initMobileBridge(userName);\n      }\n      \n      console.log('[PLUGIN] ✅ Done');\n    } catch (error) {\n      console.error('[PLUGIN] ❌ Error:', error);\n    }\n  }\n};\n\nconsole.log('[PLUGIN] Ready!');"],"names":[],"mappings":"AA8BA,QAAQ,IAAI,0BAA0B;AAEtC,OAAO,aAAa;AAAA,EAClB,SAAS;AAAA,EAET,MAAM,KAAK,SAAS,IAAI;AACtB,YAAQ,IAAI,8BAA8B,MAAM;AAEhD,UAAM,EAAE,WAAW,aAAa,OAAO,UAAU;AAEjD,QAAI;AACF,UAAI,SAAS,OAAO;AAClB,gBAAQ,IAAI,gCAAgC;AAC5C,cAAM,EAAE,MAAA,IAAU,MAAM,OAAO,yCAAyC;AACxE,cAAM,OAAO,QAAQ;AAAA,MACvB,WAAW,SAAS,UAAU;AAC5B,gBAAQ,IAAI,kCAAkC;AAC9C,cAAM,EAAE,iBAAA,IAAqB,MAAM,OAAO,6CAA6C;AACvF,yBAAiB,QAAQ;AAAA,MAC3B;AAEA,cAAQ,IAAI,iBAAiB;AAAA,IAC/B,SAAS,OAAO;AACd,cAAQ,MAAM,qBAAqB,KAAK;AAAA,IAC1C;AAAA,EACF;AACF;AAEA,QAAQ,IAAI,iBAAiB;"}